---
- name: Install nginx
  yum: pkg=nginx state=present

- name: Install PHP
  yum: pkg={{item}} state=present
  with_items:
  - php-fpm
  - php-mysql
  - php-mbstring
  - gcc
  - gcc-c++
  - php-pear
  - php-devel

- name: Create server root
  file: path=/srv/www owner=nginx group=nginx mode=755 state=directory

- name: Create server vhost root
  file: path=/srv/www/{{ ansible_fqdn }} owner=nginx group=nginx mode=750 state=directory

- name: Install nginx config
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf owner=0 group=0 mode=644
  notify:
    - restart nginx

- name: Install default vhost
  template: src=nginx.default.j2 dest=/etc/nginx/conf.d/{{ ansible_fqdn }}.conf owner=0 group=0 mode=644
  notify:
    - restart nginx

- name: Install php-fpm config
  template: src=php-fpm.www.conf.j2 dest=/etc/php-fpm.d/www.conf owner=0 group=0 mode=644
  notify:
    - restart php-fpm

- name: See if Zend Opcache is installed
  command: /usr/bin/pecl info ZendOpcache
  register: opcachestartresult
  ignore_errors: yes

- name: Install Zend Opcache
  command: /usr/bin/pecl install ZendOpcache
  when: opcachestartresult|failed

- name: See if Zend Opcache is installed now
  command: /usr/bin/pecl info ZendOpcache
  register: opcacheendresult

- name: Add Zend Opcache to php.d
  copy: content="zend_extension=/usr/lib64/php/modules/opcache.so" dest=/etc/php.d/opcache.ini owner=0 group=0 mode=644
  when: opcacheendresult|success
  notify:
    - restart php-fpm

- name: Ensure nginx enabled and running
  service: name=nginx state=started enabled=yes

- name: Ensure php-fpm enabled and running
  service: name=php-fpm state=started enabled=yes

- name: Allow http in firewall
  firewalld: service=http permanent=true state=enabled
  notify:
    - restart firewalld

- name: Allow https in firewall
  firewalld: service=https permanent=true state=enabled
  notify:
    - restart firewalld
